#+OPTIONS: toc:nil
#+EXPORT_FILE_NAME: README
* M-EMACS
* About
  M-EMACS is a custom GNU Emacs setup and configurations that aims not only to enhance the default Emacs experience, and hopefully be a sample that everyone can easily navigate and reference through a highly detailed README that contains 99% of the *entire* configuration code.

  As a young EMACSer, I have experienced the struggle to find a detailed configuration that is loosely coupled and highly readable. This mostly due to the nature of source codes, sometimes comments are harder to notice or simply not enough. Therefore I decided to construct this README and present any human-readable explanation in a much more human-friendly way. Anyone, particularly Emacs beginners who have no idea where to start with their personal config, is more than welcome to read through this document and copy/paste any part to use it on their own.

  This configuration is designed and tested for *GNU Emacs 25.1 and above only*.
  #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :range-begin "CheckVer" :range-end "-CheckVer" :lines "46-48"
** About README
   This README is originated from init.org that is generated using =M-x org-gfm-export-to-markdown=. Every block of code is generated through this function - it exports the section of code from the =elisp/= directory. You will not see their presence in init.org.
** Installation
   1. Install latest version of [[https://www.gnu.org/software/emacs/][GNU Emacs]].
   2. Clone this repo to =HOME= or =~/= path using [[https://git-scm.com/][git]] and update all the submodules.
	  #+BEGIN_SRC text
		git clone --recurse-submodules -j8 https://github.com/MatthewZMD/.emacs.d.git
		cd .emacs.d
	  #+END_SRC
   3. Ensure a stable connection to Melpa Packages, then open Emacs.
   4. Enter =y= when prompted with =Auto-update packages now?=, wait for all packages to install.
   5. In your favorite browser, =Ctrl-F Prerequisite= through this webpage and follow the *Prerequisite* instructions.
   6. Restart Emacs.
*** Further Updates
	I will be updating M-EMACS from time to time, it is best to =git pull= once a while to stay up to date.

	Please also execute =git submodule update --recursive --remote= to sync with all the submodules.
** Modification
   You have the permission to use, modify, distribute however you want. However, what is /free/ stays /free/. After all, this is [[file:LICENSE][GPL]].

   *Remember* you must manually sync this README with all the new changes you made by:
   1. Please do *NOT* edit README.md file, edit init.org instead!
   2. If you add a new mode, create a new =<file-name>.el= file in =elisp/= directory.
   3. Put =(require '<file-name>)= in [[file:init.el][init.el]] accordingly.
   4. Add =#+INCLUDE: "~/.emacs.d/elisp/<place-holder>.el" src emacs-lisp :range-begin "<start-line-wrapper-exclusive>" :range-end "<end-line-wrapper-exclusive>"= in the appropriate section in init.org.
   5. Enter =C-x C-s= to save and update =:lines=. (if you don't see the updated effect, run =M-x update-includes= manually)
   6. Call =M-x org-gfm-export-to-markdown= to update this README.
** Spotted a Bug? Suggestions?
   Please fill in Issues.
** Special Thanks
   Everyone starts somewhere, and I started here.
  - [[https://github.com/seagle0128/.emacs.d][Vincent Zhang's Centaur Emacs]]
  - [[https://github.com/hlissner/doom-emacs][Henrik Lissner's Doom Emacs]]
  - [[https://github.com/poncie/.emacs.d][Poncie Reyes's .emacs.d]]
* Table of Contents                                               :TOC_2_ORG:
- [[M-EMACS][M-EMACS]]
- [[About][About]]
  - [[About README][About README]]
  - [[Installation][Installation]]
  - [[Modification][Modification]]
  - [[Spotted a Bug? Suggestions?][Spotted a Bug? Suggestions?]]
  - [[Special Thanks][Special Thanks]]
- [[Startup][Startup]]
  - [[Lexical-binding][Lexical-binding]]
  - [[Disable Unnecessary Interface][Disable Unnecessary Interface]]
  - [[Optimization][Optimization]]
  - [[Load-Path][Load-Path]]
  - [[Define Constants][Define Constants]]
- [[Package Management][Package Management]]
  - [[Melpa Packages][Melpa Packages]]
  - [[Non-Melpa Packages][Non-Melpa Packages]]
  - [[Configure Package Management][Configure Package Management]]
  - [[Use-Package Wrapper][Use-Package Wrapper]]
  - [[Auto Package Update][Auto Package Update]]
- [[Global Functionalities][Global Functionalities]]
  - [[User Information][User Information]]
  - [[Bindings][Bindings]]
  - [[Dired][Dired]]
  - [[Search][Search]]
  - [[Avy][Avy]]
  - [[Ivy][Ivy]]
  - [[Winner][Winner]]
  - [[Which Key][Which Key]]
  - [[Popup Kill Ring][Popup Kill Ring]]
  - [[Undo Tree][Undo Tree]]
  - [[Shell Here][Shell Here]]
  - [[Discover My Major][Discover My Major]]
  - [[Configs][Configs]]
  - [[More Functions][More Functions]]
- [[User Interface Enhancements][User Interface Enhancements]]
  - [[Title Bar][Title Bar]]
  - [[All The Icons][All The Icons]]
  - [[Doom Theme][Doom Theme]]
  - [[Doom Modeline][Doom Modeline]]
  - [[Dashboard][Dashboard]]
  - [[Fonts][Fonts]]
  - [[Zone][Zone]]
  - [[Diminish][Diminish]]
  - [[Dimmer][Dimmer]]
  - [[Smooth Scroll][Smooth Scroll]]
  - [[Highlight Indent Guides][Highlight Indent Guides]]
  - [[Pretty Symbols][Pretty Symbols]]
  - [[UI Configs][UI Configs]]
- [[General Programming][General Programming]]
  - [[Magit][Magit]]
  - [[Projectile][Projectile]]
  - [[Treemacs][Treemacs]]
  - [[Company][Company]]
  - [[Flycheck][Flycheck]]
  - [[Dumb Jump][Dumb Jump]]
  - [[Line Numbers][Line Numbers]]
  - [[Parenthesis Pairing][Parenthesis Pairing]]
  - [[Format All][Format All]]
  - [[Evil-Nerd-Commenter][Evil-Nerd-Commenter]]
  - [[Iedit][Iedit]]
  - [[Header][Header]]
  - [[LSP][LSP]]
- [[Programming][Programming]]
  - [[Emacs Lisp][Emacs Lisp]]
  - [[Java][Java]]
  - [[C/C++][C/C++]]
  - [[Python][Python]]
  - [[Arduino][Arduino]]
  - [[Jupyter Notebook][Jupyter Notebook]]
- [[Web Development][Web Development]]
  - [[Web Mode][Web Mode]]
  - [[Emmet][Emmet]]
  - [[JavaScript/TypeScript][JavaScript/TypeScript]]
- [[Miscellaneous][Miscellaneous]]
  - [[Org][Org]]
  - [[Emacs Web Wowser][Emacs Web Wowser]]
  - [[LeetCode][LeetCode]]
  - [[Tetris][Tetris]]
  - [[Speed Type][Speed Type]]
  - [[2048 Game][2048 Game]]

* Startup
** Lexical-binding
   Use lexical-binding. [[https://nullprogram.com/blog/2016/12/22/][Why?]]
   #+BEGIN_QUOTE
   Until Emacs 24.1 (June 2012), Elisp only had dynamically scoped variables, a feature, mostly by accident, common to old lisp dialects. While dynamic scope has some selective uses, itâ€™s widely regarded as a mistake for local variables, and virtually no other languages have adopted it.
   #+END_QUOTE
   #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :lines "1-2"
** Disable Unnecessary Interface
   This need to be in the beginning of initialization to smooth the experience.
   #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :range-begin "DisableUnnecessaryInterface" :range-end "-DisableUnnecessaryInterface" :lines "51-55"
** Optimization
   Avoid garbage collection during startup.
   #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :range-begin "AvoidStartupGarbageCollect" :range-end "AvoidStartupGarbageCollect"  :lines "58-67"
   Unset file name handler alist.
   #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :range-begin "UnsetFNHA" :range-end "-UnsetFNHA" :lines "70-78"
** Load-Path
   #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :range-begin "LoadPath" :range-end "-LoadPath"  :lines "81-91"
   Since all the configuration files are stored in =elisp/= folder, as well as the =site-elisp/= folder that contains non-Melpa packages, they need to be added to =load-path= on startup.
   #+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp :range-begin "LoadLP" :range-end "-LoadLP"  :lines "94-96"
** Define Constants
   #+INCLUDE: "~/.emacs.d/elisp/init-const.el" src emacs-lisp :range-begin "Consts" :range-end "-Consts"  :lines "50-64"
* Package Management
** Melpa Packages
   #+INCLUDE: "~/.emacs.d/elisp/init-package.el" src emacs-lisp :range-begin "MelpaPackages" :range-end "-MelpaPackages" :lines "45-54"
   Load all Melpa packages in =elisp/= to =load-path= directly to reduce startup time.
** Non-Melpa Packages
   These packages are contained in =site-elisp/=, they are added to

*** Add Packages Manually from Git
	#+BEGIN_SRC text
	  cd site-elisp/
	  git submodule add https://github.com/foo/bar.git
	#+END_SRC
	Verify =/.gitmodules= file that the newly added package exist.
*** Update Manually Added Packages
	#+BEGIN_SRC text
	  git submodule init
	  git submodule update
	#+END_SRC
** Configure Package Management
   #+INCLUDE: "~/.emacs.d/elisp/init-package.el" src emacs-lisp :range-begin "ConfigurePackageManagement" :range-end "-ConfigurePackageManagement" :lines "57-69"
** Use-Package Wrapper
   My Emacs configuration is almost entirely dependant on a faster implementation of [[https://github.com/jwiegley/use-package][use-package]] based on [[https://github.com/hlissner/doom-emacs/blob/master/core/core-packages.el#L323][Doom Emacs]].
   #+BEGIN_QUOTE
   The =use-package= macro allows you to isolate package configuration in your .emacs file in a way that is both performance-oriented and, well, tidy. I created it because I have over 80 packages that I use in Emacs, and things were getting difficult to manage. Yet with this utility my total load time is around 2 seconds, with no loss of functionality!
   #+END_QUOTE
   Add the macro generated list of package.el loadpaths to load-path.
   #+INCLUDE: "~/.emacs.d/elisp/init-package.el" src emacs-lisp :range-begin "UsePackageWrapperMacro" :range-end "-UsePackageWrapperMacro"  :lines "72-98"
   The =use-package= wrapper.
   #+INCLUDE: "~/.emacs.d/elisp/init-package.el" src emacs-lisp :range-begin "DefPackage" :range-end "-DefPackage" :lines "101-110"
** Auto Package Update
   [[https://github.com/rranelli/auto-package-update.el][Auto package update]] automatically updates installed packages if at least =auto-package-update-interval= days have passed since the last update.
   #+INCLUDE: "~/.emacs.d/elisp/init-package.el" src emacs-lisp :range-begin "AutoPackageUpdate" :range-end "-AutoPackageUpdate" :lines "113-120"
* Global Functionalities
** User Information
   *Prerequisite*: Please update this file your personal info.
   #+INCLUDE: "~/.emacs.d/elisp/init-const.el" src emacs-lisp :range-begin "UserInfo" :range-end "-UserInfo"" :lines "45-47"
** Bindings
   #+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "Bindings" :range-end "-Bindings"" :lines "45-57"
** Dired
*** Dired
	Dired, the directory editor.
	#+INCLUDE: "~/.emacs.d/elisp/init-dired.el" src emacs-lisp :range-begin "DiredPackage" :range-end "-DiredPackage" :lines "47-70"
*** Autosave and Backup
	Create directory where Emacs stores backups and autosave files.
	#+INCLUDE: "~/.emacs.d/elisp/init-dired.el" src emacs-lisp :range-begin "AutosaveBackupDir" :range-end "-AutosaveBackupDir" :lines "73-75"
	Set autosave and backup directory.
	#+INCLUDE: "~/.emacs.d/elisp/init-dired.el" src emacs-lisp :range-begin "AutosaveBackupAlist" :range-end "-AutosaveBackupAlist" :lines "78-83"
*** Rename Both File and Buffer
	#+INCLUDE: "~/.emacs.d/elisp/init-dired.el" src emacs-lisp :range-begin "RenameFileBuffer" :range-end "-RenameFileBuffer" :lines "86-101"
*** File Configs
	#+INCLUDE: "~/.emacs.d/elisp/init-dired.el" src emacs-lisp :range-begin "DiredConfigs" :range-end "-DiredConfigs" :lines "104-112"
** Search
   *Prerequisite*: Please [[https://github.com/BurntSushi/ripgrep#installation][install]] ripgrep and add =rg= to the =PATH=.
*** Color-RG
	[[https://github.com/manateelazycat/color-rg][Color-RG]], a search and refactoring tool based on ripgrep that is used to search text.
	#+INCLUDE: "~/.emacs.d/elisp/init-search.el" src emacs-lisp :range-begin "ColorRGPac" :range-end "-ColorRGPac" :lines "49-54"
*** Grep-Dired
	[[https://github.com/manateelazycat/grep-dired][Grep-Dired]], a search and refactoring tool based on ripgrep that is used to search files.
	#+INCLUDE: "~/.emacs.d/elisp/init-search.el" src emacs-lisp :range-begin "GrepDiredPac" :range-end "-GrepDiredPac" :lines "57-63"
** Avy
   [[https://github.com/abo-abo/avy][Avy]], a nice way to move around text.
   #+INCLUDE: "~/.emacs.d/elisp/init-avy.el" src emacs-lisp :range-begin "AvyPac" :range-end "-AvyPac" :lines "47-55"
** Ivy
*** Main Ivy
	[[https://github.com/abo-abo/swiper][Ivy]], a generic completion mechanism for Emacs.
	#+INCLUDE: "~/.emacs.d/elisp/init-ivy.el" src emacs-lisp :range-begin "IvyPackage" :range-end "-IvyPackage" :lines "47-57"
*** Amx
	[[https://github.com/DarwinAwardWinner/amx][Amx]], a M-x enhancement tool forked from [[https://github.com/nonsequitur/smex][Smex]].
	#+INCLUDE: "~/.emacs.d/elisp/init-ivy.el" src emacs-lisp :range-begin "AmxPac" :range-end "-AmxPac" :lines "60-63"
*** Counsel
	[[https://github.com/abo-abo/swiper][Counsel]], a collection of Ivy-enhanced versions of common Emacs commands.
	#+INCLUDE: "~/.emacs.d/elisp/init-ivy.el" src emacs-lisp :range-begin "CounselPac" :range-end "-CounselPac" :lines "66-70"
*** Swiper
	[[https://github.com/abo-abo/swiper][Swiper]], an Ivy-enhanced alternative to isearch.
	#+INCLUDE: "~/.emacs.d/elisp/init-ivy.el" src emacs-lisp :range-begin "SwiperPac" :range-end "-SwiperPac" :lines "73-75"
** Winner
   Winner mode restores old window layout.
   #+INCLUDE: "~/.emacs.d/elisp/init-winner.el" src emacs-lisp :range-begin "WinnerPac" :range-end "-WinnerPac" :lines "48-60"
** Which Key
   [[https://github.com/justbur/emacs-which-key][Which key]], a feature that displays the key bindings following the incomplete command.
   #+INCLUDE: "~/.emacs.d/elisp/init-which-key.el" src emacs-lisp :range-begin "WhichKeyPac" :range-end "-WhichKeyPac" :lines "47-54"
** Popup Kill Ring
   [[https://github.com/waymondo/popup-kill-ring][Popup kill ring]], a feature that provides the ability to browse Emacs kill ring in autocomplete style popup menu.
   #+INCLUDE: "~/.emacs.d/elisp/init-popup-kill-ring.el" src emacs-lisp :range-begin "PopKillRing" :range-end "-PopKillRing" :lines "47-49"
** Undo Tree
   [[https://www.emacswiki.org/emacs/UndoTree][Undo tree]], a feature that provides a visualization of the undos in a file.
   #+INCLUDE: "~/.emacs.d/elisp/init-undo-tree.el" src emacs-lisp :range-begin "UndoTreePac" :range-end "-UndoTreePac" :lines "47-51"
** Shell Here
   [[https://github.com/ieure/shell-here][Shell-here]], a tool that opens a shell buffer in (or relative to) =default-directory=.
   #+INCLUDE: "~/.emacs.d/elisp/init-shell.el" src emacs-lisp :range-begin "ShellHere" :range-end "-ShellHere" :lines "47-49"
** Discover My Major
   [[https://github.com/jguenther/discover-my-major][Discover my major]], a feature that discovers key bindings and their meaning for the current Emacs major mode.
   #+INCLUDE: "~/.emacs.d/elisp/init-discover-my-major.el" src emacs-lisp :range-begin "DiscMyMajor" :range-end "-DiscMyMajor" :lines "46-48"
** Configs
   Some essential configs that make my life a lot easier.
*** UTF-8 Coding System
	Use UTF-8 as much as possible with unix line endings.
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "UTF8Coding" :range-end "-UTF8Coding" :lines "60-74"
*** Turn Off Cursor Alarms
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "RingBell" :range-end "-RingBell" :lines "77-78"
*** Show Keystrokes in Progress Instantly
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "EchoKey" :range-end "-EchoKey" :lines "81-82"
*** Optimize Editing Experience
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "EditExp" :range-end "-EditExp" :lines "85-109"
*** Automatic Garbage Collect
	Garbage collect when Emacs is not in focus.
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "AutoGbgCollect" :range-end "-AutoGbgCollect" :lines "112-113"
*** Don't Lock Files
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "CreateLockFile" :range-end "-CreateLockFile" :lines "116-117"
*** Longer History Length
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "HisLen" :range-end "-HisLen" :lines "120-121"
*** Compilation
	Better compilation configurations.
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "BetterCompilation" :range-end "-BetterCompilation" :lines "124-129"
*** Move Custom-Set-Variables to Different File
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "CustomSetFileLocation" :range-end "-CustomSetFileLocation" :lines "132-134"
** More Functions
   Other important, but longer functions.
*** Resize Window Width / Height Functions
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "ResizeWidthheight" :range-end "-ResizeWidthheight" :lines "139-160"
*** Edit This Configuration File Shortcut
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "EditConfig" :range-end "-EditConfig" :lines "163-169"
*** Smarter Move Beginning of Line
	Smarter navigation to the beginning of a line by [[https://emacsredux.com/blog/2013/05/22/smarter-navigation-to-the-beginning-of-a-line/][Bozhidar Batsov]].
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "MoveBeginningLine" :range-end "-MoveBeginningLine" :lines "172-198"
*** Update Org Mode Include Automatically
	Update Org Mode INCLUDE Statements Automatically from [[http://endlessparentheses.com/updating-org-mode-include-statements-on-the-fly.html][Artur Malabarba]].
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "OrgIncludeAuto" :range-end "-OrgIncludeAuto" :lines "201-246"
*** MiniBuffer
	#+INCLUDE: "~/.emacs.d/elisp/init-global-config.el" src emacs-lisp :range-begin "BetterMiniBuffer" :range-end "-BetterMiniBuffer" :lines "250-259"
* User Interface Enhancements
** Title Bar
   #+INCLUDE: "~/.emacs.d/elisp/init-ui-config.el" src emacs-lisp :range-begin "TitleBar" :range-end "-TitleBar" :lines "45-46"
** All The Icons
   [[https://github.com/domtronn/all-the-icons.el][All The Icons]], a utility package to collect various Icon Fonts.

   *Prerequisite*: Install all fonts from =fonts/all-the-icons-fonts=.
   #+INCLUDE: "~/.emacs.d/elisp/init-all-the-icons.el" src emacs-lisp :range-begin "ATIPac" :range-end "-ATIPac" :lines "46-47"
*** All The Icons Dired
	[[https://github.com/jtbm37/all-the-icons-dired][All The Icons Dired]], an icon set for Dired.
	#+INCLUDE: "~/.emacs.d/elisp/init-all-the-icons.el" src emacs-lisp :range-begin "ATIDiredPac" :range-end "-ATIDiredPac" :lines "50-55"
*** All The Icons Ivy
	[[https://github.com/asok/all-the-icons-ivy][All The Icons Ivy]], an icon set for Ivy.
	#+INCLUDE: "~/.emacs.d/elisp/init-all-the-icons.el" src emacs-lisp :range-begin "ATIIvyPac" :range-end "-ATIIvyPac" :lines "58-65"
** Doom Theme
   [[https://github.com/hlissner/emacs-doom-themes][doom-themes]], an UI plugin and pack of theme. It is set to default to Dracula theme.
   #+INCLUDE: "~/.emacs.d/elisp/init-doom.el" src emacs-lisp :range-begin "DoomThemes" :range-end "-DoomThemes" :lines "49-57"
** Doom Modeline
   [[https://github.com/seagle0128/doom-modeline][Doom modeline]], a modeline from DOOM Emacs, but more powerful and faster.
   #+INCLUDE: "~/.emacs.d/elisp/init-doom.el" src emacs-lisp :range-begin "DoomModeline" :range-end "-DoomModeline" :lines "60-71"
** Dashboard
*** Dashboard
	[[https://github.com/rakanalh/emacs-dashboard][Dashboard]], an extensible Emacs startup screen.

	Use either =KEC_Dark_BK.png= or =KEC_Light_BK.png= depends on the backgrond theme.
	#+INCLUDE: "~/.emacs.d/elisp/init-dashboard.el" src emacs-lisp :range-begin "DashboardPac" :range-end "-DashboardPac" :lines "47-91"
*** Page Break Lines
	[[https://github.com/purcell/page-break-lines][Page-break-lines]], a feature that displays ugly form feed characters as tidy horizontal rules.
	#+INCLUDE: "~/.emacs.d/elisp/init-dashboard.el" src emacs-lisp :range-begin "PBLPac" :range-end "-PBLPac" :lines "94-97"
** Fonts
   Prepares fonts to use.

   *Prerequisite*: Install =Input= and =Love Letter TW= from =fonts/=.
   #+INCLUDE: "~/.emacs.d/elisp/init-fonts.el" src emacs-lisp :range-begin "FontsList" :range-end "-FontsList" :lines "45-48"
   Change Font Function.
   #+INCLUDE: "~/.emacs.d/elisp/init-fonts.el" src emacs-lisp :range-begin "FontFun" :range-end "-FontFun" :lines "51-71"
** Zone
   [[https://www.emacswiki.org/emacs/ZoneMode][Zone mode]], a minor-mode 'zones' Emacs out, choosing one of its random modes to obfuscate the current buffer, which is used as my Emacs screensaver.
   #+INCLUDE: "~/.emacs.d/elisp/init-zone.el" src emacs-lisp :range-begin "ZonePac" :range-end "-ZonePac" :lines "47-61"
** Diminish
   [[https://github.com/emacsmirror/diminish][Diminish]], a feature that removes certain minor modes from mode-line.
   #+INCLUDE: "~/.emacs.d/elisp/init-diminish.el" src emacs-lisp :range-begin "DimPac" :range-end "-DimPac" :lines "46-47"
** Dimmer
   [[https://github.com/gonewest818/dimmer.el][Dimmer]], a feature that visually highlights the selected buffer.
   #+INCLUDE: "~/.emacs.d/elisp/init-dimmer.el" src emacs-lisp :range-begin "DimmPac" :range-end "-DimmPac" :lines "47-52"
** Smooth Scroll
   Smoothens Scrolling.
   #+INCLUDE: "~/.emacs.d/elisp/init-scroll.el" src emacs-lisp :range-begin "SmoothScroll" :range-end "-SmoothScroll" :lines "45-58"
** Highlight Indent Guides
   [[https://github.com/DarthFennec/highlight-indent-guides][Highlight Indent Guides]], a feature that highlights indentation levels.
   #+INCLUDE: "~/.emacs.d/elisp/init-highlight-indent.el" src emacs-lisp :range-begin "HighLightIndentPac" :range-end "-HighLightIndentPac" :lines "48-57"
** Pretty Symbols
   Pretty the Symbols.
   #+INCLUDE: "~/.emacs.d/elisp/init-symbol.el" src emacs-lisp :range-begin "PreSym" :range-end "-PreSym" :lines "45-61"
** UI Configs
*** Maximize Frame
	#+INCLUDE: "~/.emacs.d/elisp/init-ui-config.el" src emacs-lisp :range-begin "MaxFrame" :range-end "-MaxFrame" :lines "49-50"
*** Disable Splash Screen
	#+INCLUDE: "~/.emacs.d/elisp/init-ui-config.el" src emacs-lisp :range-begin "StartupScreen" :range-end "-StartupScreen" :lines "53-55"
*** Simplify Yes/No Prompts
	#+INCLUDE: "~/.emacs.d/elisp/init-ui-config.el" src emacs-lisp :range-begin "YorN" :range-end "-YorN" :lines "58-59"
* General Programming
** Magit
   [[https://magit.vc/][Magit]], an interface to the version control system Git.
   #+INCLUDE: "~/.emacs.d/elisp/init-magit.el" src emacs-lisp :range-begin "MagitPac" :range-end "-MagitPac" :lines "46-48"
** Projectile
   [[https://github.com/bbatsov/projectile][Projectile]], a Project Interaction Library for Emacs.

   *Prerequisite*: If using Windows OS, [[https://github.com/bmatzelle/gow/releases][install]] Gow and add to =PATH=.

   [[https://github.com/bmatzelle/gow][Gow]] is a lightweight installer that installs useful open source UNIX applications compiled as native win32 binaries. Specifically, =tr= is needed for Projectile alien indexing.
   #+INCLUDE: "~/.emacs.d/elisp/init-projectile.el" src emacs-lisp :range-begin "ProjPac" :range-end "-ProjPac" :lines "49-61"
** Treemacs
   [[https://github.com/Alexander-Miller/treemacs][Treemacs]], a tree layout file explorer for Emacs.
*** Treemacs
	#+INCLUDE: "~/.emacs.d/elisp/init-treemacs.el" src emacs-lisp :range-begin "TreemacsPac" :range-end "-TreemacsPac" :lines "47-101"
*** Treemacs Magit
	#+INCLUDE: "~/.emacs.d/elisp/init-treemacs.el" src emacs-lisp :range-begin "TreeMagit" :range-end "-TreeMagit" :lines "104-107"
*** Treemacs Projectile
	#+INCLUDE: "~/.emacs.d/elisp/init-treemacs.el" src emacs-lisp :range-begin "TreeProj" :range-end "-TreeProj" :lines "110-113"
** Company
   [[http://company-mode.github.io/][Company]], short for *Comp*lete *any*thing, a text completion framework for Emacs.
   #+INCLUDE: "~/.emacs.d/elisp/init-company.el" src emacs-lisp :range-begin "ComPac" :range-end "-ComPac" :lines "47-64"
** Flycheck
   [[https://www.flycheck.org/en/latest/][Flycheck]], a syntax checking extension.
   #+INCLUDE: "~/.emacs.d/elisp/init-flycheck.el" src emacs-lisp :range-begin "FlyCheckPac" :range-end "-FlyCheckPac" :lines "46-53"
** Dumb Jump
   [[https://github.com/jacktasia/dumb-jump][Dumb jump]], an Emacs "jump to definition" package.
   #+INCLUDE: "~/.emacs.d/elisp/init-dumb-jump.el" src emacs-lisp :range-begin "DumbJump" :range-end "-DumbJump" :lines "47-54"
** Line Numbers
   Display line numbers, and column numbers in modeline.
   #+INCLUDE: "~/.emacs.d/elisp/init-linenum.el" src emacs-lisp :range-begin "DisLineNum" :range-end "-DisLineNum" :lines "45-54"
** Parenthesis Pairing
   Match and automatically pair parenthesis.
   #+INCLUDE: "~/.emacs.d/elisp/init-parens.el" src emacs-lisp :range-begin "MatchParens" :range-end "-MatchParens" :lines "47-49"
*** Smartparens
	[[https://github.com/Fuco1/smartparens][Smartparens]], a minor mode for dealing with pairs.
	#+INCLUDE: "~/.emacs.d/elisp/init-parens.el" src emacs-lisp :range-begin "SmartParensPac" :range-end "-SmartParensPac" :lines "52-95"
*** Awesome Pair
	[[https://github.com/manateelazycat/awesome-pair][Awesome Pair]], a feature that provides grammatical parenthesis completion. All I need is this smart kill.
	#+INCLUDE: "~/.emacs.d/elisp/init-parens.el" src emacs-lisp :range-begin "AwesomePairPac" :range-end "-AwesomePairPac" :lines "98-103"
** Format All
   [[https://github.com/lassik/emacs-format-all-the-code][Format all]], a feature that lets you auto-format source code.

   *Prerequisite*: Read [[https://github.com/lassik/emacs-format-all-the-code#supported-languages][Supported Languages]] to see which additional tool you need to install for the specific language.
   #+INCLUDE: "~/.emacs.d/elisp/init-format.el" src emacs-lisp :range-begin "FormatAllPac" :range-end "-FormatAllPac" :lines "47-49"
** Evil-Nerd-Commenter
   [[https://github.com/redguardtoo/evil-nerd-commenter][Evil Nerd Commenter]], a tool that helps you comment code efficiently.
   #+INCLUDE: "~/.emacs.d/elisp/init-commenter.el" src emacs-lisp :range-begin "EvilNerdCommenPac" :range-end "-EvilNerdCommenPac" :lines "47-52"
** Iedit
   [[https://github.com/victorhge/iedit][Iedit]], a minor mode that allows editing multiple regions simultaneousy in a buffer or a region.
   #+INCLUDE: "~/.emacs.d/elisp/init-iedit.el" src emacs-lisp :range-begin "IEditPac" :range-end "-IEditPac" :lines "47-50"
** Header
   [[https://www.emacswiki.org/emacs/header2.el][Header2]], a support for creation and update of file headers.
   #+INCLUDE: "~/.emacs.d/elisp/init-header.el" src emacs-lisp :range-begin "Header2Pac" :range-end "-Header2Pac" :lines "46-54"
** LSP
   [[https://github.com/emacs-lsp/lsp-mode][LSP]], a client/library for the [[https://microsoft.github.io/language-server-protocol/][Language Server Protocol]].
*** LSP Mode
	#+INCLUDE: "~/.emacs.d/elisp/init-lsp.el" src emacs-lisp :range-begin "LSPPac" :range-end "-LSPPac" :lines "52-60"
*** LSP UI
	[[https://github.com/emacs-lsp/lsp-ui][LSP UI]], provides all the higher level UI modules of lsp-mode, like flycheck support and code lenses.
	#+INCLUDE: "~/.emacs.d/elisp/init-lsp.el" src emacs-lisp :range-begin "LSPUI" :range-end "-LSPUI" :lines "63-93"
*** Company LSP
	[[https://github.com/tigersoldier/company-lsp][Company SLP]], a Company completion backend for lsp-mode.
	#+INCLUDE: "~/.emacs.d/elisp/init-lsp.el" src emacs-lisp :range-begin "LSPCompany" :range-end "-LSPCompany" :lines "96-101"
*** DAP
	[[https://github.com/emacs-lsp/dap-mode][DAP]], a client/library for the [[https://code.visualstudio.com/api/extension-guides/debugger-extension][Debug Adapter Protocol]].
	#+INCLUDE: "~/.emacs.d/elisp/init-lsp.el" src emacs-lisp :range-begin "DAPPac" :range-end "-DAPPac" :lines "104-110"
* Programming
** Emacs Lisp
*** Shortcut for Evaluating Elisp
	Eval-buffer for ELisp Code.
	#+INCLUDE: "~/.emacs.d/elisp/init-emacs-lisp.el" src emacs-lisp :range-begin "ELispEval" :range-end "-ELispEval" :lines "45-46"
** Java
*** LSP Java
	[[https://github.com/emacs-lsp/lsp-java][LSP Java]], Emacs Java IDE using [[https://projects.eclipse.org/projects/eclipse.jdt.ls][Eclipse JDT Language Server]].

	*Prerequisite*: [[https://maven.apache.org/download.cgi][Install]] Maven and add to =PATH=.
	#+INCLUDE: "~/.emacs.d/elisp/init-lsp.el" src emacs-lisp :range-begin "LSPJavaPac" :range-end "-LSPJavaPac" :lines "115-122"
** C/C++
   *Prerequisite*:
   - Windows OS: [[http://www.mingw.org/wiki/Install_MinGW][Install]] MinGW for Compilation and [[https://cmake.org/download/][CMake]] >= 2.8.3 first.
   - ALl OS: [[https://clang.llvm.org/extra/clangd/Installation.html][Install]] Clangd and add to =PATH=.

   Note: If Displaying =No LSP server for c-mode=, execute =M-x ielm= and verify clangd is installed using =(executable-find "clangd")= or =(executable-find lsp-clients-clangd-executable)=.

   Compile using =<f5>= or =compile=. The command =gcc -o <file>.exe <fileA>.c <fileB>.c ...= is to compile C code into =<file>.exe=.
*** CC Mode
	CC Mode, a mode for editing files containing C, C++, Objective-C, Java, CORBA IDL (and the variants CORBA PSDL and CIDL), Pike and AWK code.
	#+INCLUDE: "~/.emacs.d/elisp/init-c.el" src emacs-lisp :range-begin "CCPac" :range-end "-CCPac" :lines "48-55"
	Rest of the features will be provided by [[https://github.com/emacs-lsp/lsp-mode][LSP Mode]].
** Python
*** TODO Microsoft's Python Language Server - [[https://github.com/melpa/melpa/pull/6027][Use Melpa Once it's Ready]]
	[[https://github.com/andrew-christianson/lsp-python-ms][LSP Python MS]], a lsp-mode client leveraging [[https://github.com/Microsoft/python-language-server][Microsoft's Python Language Server]].

	*Prerequisite*:
	[[https://dotnet.microsoft.com/download][Install]] .NET Core SDK, then execute the following commands from your =HOME= or =~= path:
	#+BEGIN_SRC text
	  git clone https://github.com/Microsoft/python-language-server.git
	  cd python-language-server/src/LanguageServer/Impl
	  dotnet build -c Release
	  dotnet publish -c Release -r win10-x64
	#+END_SRC
	Change the value after =-r= flag (=win10-x64=) depending on your architecture and OS. See Microsoft's [[https://docs.microsoft.com/en-us/dotnet/core/rid-catalog][Runtime ID Catalog]] for the correct value for your OS.

	Now, put =~/.emacs.d\python-language-server\output\bin\Release\win10-x64\publish= in your =PATH=.
	#+INCLUDE: "~/.emacs.d/elisp/init-lsp.el" src emacs-lisp :range-begin "LSPPythonPac" :range-end "-LSPPythonPac" :lines "125-136"
** Arduino
*** Arduino Mode
	[[https://github.com/bookest/arduino-mode][Arduino mode]], a major mode for editing Arduino sketches.
	#+INCLUDE: "~/.emacs.d/elisp/init-arduino.el" src emacs-lisp :range-begin "ArduinoPac" :range-end "-ArduinoPac" :lines "47-53"
*** Company Arduino
	[[https://github.com/yuutayamada/company-arduino][Company Arduino]], a set of configuration to let you auto-completion by using irony-mode, company-irony and company-c-headers on arduino-mode.
	#+INCLUDE: "~/.emacs.d/elisp/init-arduino.el" src emacs-lisp :range-begin "CompanyArduinoPac" :range-end "-CompanyArduinoPac" :lines "56-62"
** Jupyter Notebook
   [[https://github.com/millejoh/emacs-ipython-notebook][Emacs IPython Notebook]], a [[https://jupyter.org/][Jupyter]] (formerly IPython) client in Emacs.
*** Usage
	1. Execute =M-x ein:run= to launch a local Jupyter session.
	2. Login with =M-x ein:login= to a local or remote session.
	3. Open =.ipynb= file and press =C-c C-o=.
	#+INCLUDE: "~/.emacs.d/elisp/init-ein.el" src emacs-lisp :range-begin "EINPac" :range-end "-EINPac" :lines "47-49"
* Web Development
  *Prerequisite*: [[https://nodejs.org/en/download/][Install]] NodeJS and add to path. Execute following commands to enable LSP for JavaScript/TypeScript/HTML:
  #+BEGIN_SRC text
	npm i -g typescript-language-server
	npm i -g typescript
	npm install -g vscode-html-languageserver-bin
  #+END_SRC
** Web Mode
   [[https://github.com/fxbois/web-mode][Web mode]], a major mode for editing web templates.
   #+INCLUDE: "~/.emacs.d/elisp/init-webdev.el" src emacs-lisp :range-begin "WebModePac" :range-end "-WebModePac" :lines "47-51"
** Emmet
   [[https://github.com/smihica/emmet-mode][Emmet]], a feature that allows writing HTML using CSS selectors along with =C-j=. See [[https://github.com/smihica/emmet-mode#usage][usage]] for more information.
   #+INCLUDE: "~/.emacs.d/elisp/init-webdev.el" src emacs-lisp :range-begin "EmmetPac" :range-end "-EmmetPac" :lines "54-58"
** JavaScript/TypeScript
*** JavaScript2 Mode
	[[https://github.com/mooz/js2-mode][JS2 mode]], a feature that offers improved JavsScript editing mode.
	#+INCLUDE: "~/.emacs.d/elisp/init-webdev.el" src emacs-lisp :range-begin "Js2Pac" :range-end "-Js2Pac" :lines "61-64"
*** TypeScript Mode
	[[https://github.com/emacs-typescript/typescript.el][TypeScript mode]], a feature that offers TypeScript support for Emacs.
	#+INCLUDE: "~/.emacs.d/elisp/init-webdev.el" src emacs-lisp :range-begin "TypeScriptPac" :range-end "-TypeScriptPac" :lines "67-80"
*** Tide
	[[https://github.com/ananthakumaran/tide][Tide]], a *T*ypeScript *I*nteractive *D*evelopment *E*nvironment for *E*macs. This is an alternative when LSP is not working.

	Tip: enter =M-.= to jump to definition.
	#+INCLUDE: "~/.emacs.d/elisp/init-webdev.el" src emacs-lisp :range-begin "TidePac" :range-end "-TidePac" :lines "83-89"
* Miscellaneous
** Org
   [[https://orgmode.org/][Org]], a Emacs built-in tool for keeping notes, maintaining TODO lists, planning projects, and authoring documents with a fast and effective plain-text system.

   *Prerequisite*: Modify =(setq org-agenda-files (list "~/org/agenda/"))= to your agenda folder.
   #+INCLUDE: "~/.emacs.d/elisp/init-org.el" src emacs-lisp :range-begin "OrgPac" :range-end "-OrgPac" :lines "47-63"
*** TOC Org
	[[https://github.com/snosov1/toc-org][TOC Org]] generates table of contents for =.org= files
	#+INCLUDE: "~/.emacs.d/elisp/init-org.el" src emacs-lisp :range-begin "TocOrgPac" :range-end "-TocOrgPac" :lines "66-68"
*** HTMLize
	[[https://github.com/hniksic/emacs-htmlize][HTMLize]], a tool that converts buffer text and decorations to HTML.
	#+INCLUDE: "~/.emacs.d/elisp/init-org.el" src emacs-lisp :range-begin "HTMLIZEPac" :range-end "-HTMLIZEPac" :lines "71-72"
*** OX-GFM
	[[https://github.com/larstvei/ox-gfm][OX-GFM]], a Github Flavored Markdown exporter for Org Mode.
	#+INCLUDE: "~/.emacs.d/elisp/init-org.el" src emacs-lisp :range-begin "OXGFMPac" :range-end "-OXGFMPac" :lines "75-76"
** Emacs Web Wowser
   EWW, the Emacs Web Wowser.
*** Set EWW as Default Browser
	In Eww, hit & to browse this url system browser
	#+INCLUDE: "~/.emacs.d/elisp/init-eww.el" src emacs-lisp :range-begin "EwwDefault" :range-end "-EwwDefault" :lines "45-46"
*** Auto-Rename New EWW Buffers
	#+INCLUDE: "~/.emacs.d/elisp/init-eww.el" src emacs-lisp :range-begin "EwwRenameBuffer" :range-end "-EwwRenameBuffer" :lines "49-63"
** LeetCode
   [[https://github.com/kaiwk/leetcode.el][LeetCode]], an Emacs LeetCode client. Note that this package is dependant on [[https://github.com/tkf/emacs-request][Request]], [[https://github.com/tkf/emacs-request/blob/master/request-deferred.el][Request-Deferred]] and [[https://github.com/davazp/graphql-mode][GraphQL]].

   *Prerequisite*: Ensure =cURL= is installed added to =PATH=. If you are using Windows, it is suggested to use =curl= provided by Git, therefore add =<path to Git>\mingw64\bin= to =PATH=.
   #+INCLUDE: "~/.emacs.d/elisp/init-leetcode.el" src emacs-lisp :range-begin "LeetCodePac" :range-end "-LeetCodePac" :lines "49-60"
** Tetris
   Although [[https://www.emacswiki.org/emacs/TetrisMode][Tetris]] is part of Emacs, but there still could be some configurations.
   #+INCLUDE: "~/.emacs.d/elisp/init-games.el" src emacs-lisp :range-begin "TetrisConfig" :range-end "-TetrisConfig" :lines "47-56"
** Speed Type
   [[https://github.com/hagleitn/speed-type][Speed type]], a game to practice touch/speed typing in Emacs.
   #+INCLUDE: "~/.emacs.d/elisp/init-games.el" src emacs-lisp :range-begin "SpeedTypePac" :range-end "-SpeedTypePac" :lines "59-61"
** 2048 Game
   [[https://bitbucket.org/zck/2048.el][2048 Game]], an implementation of 2048 in Emacs.
   #+INCLUDE: "~/.emacs.d/elisp/init-games.el" src emacs-lisp :range-begin "2048Pac" :range-end "-2048Pac" :lines "64-66"
